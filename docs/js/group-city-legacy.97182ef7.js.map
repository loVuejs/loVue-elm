{"version":3,"sources":["webpack:///./src/views/city/city.vue?3150","webpack:///src/views/city/city.vue","webpack:///./src/views/city/city.vue?32d8","webpack:///./src/views/city/city.vue?e0af","webpack:///./node_modules/localforage/dist/localforage.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./src/views/city/city.vue?cd32"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","fixed","title","cityInfo","name","slot","on","click","back","icon","_v","to","method","submit","$event","preventDefault","directives","rawName","value","expression","type","placeholder","domProps","keyup","indexOf","_k","keyCode","key","getAddressAround","input","target","composing","address","searchHistory","length","class","listIndex","showSearchList","_e","addressAround","renderList","_l","item","index","nextpage","geohash","_s","clearSearchHistory","staticRenderFns","cityvue_type_script_lang_js_","data","axiosCancel","mounted","document","querySelector","innerText","getCityInfo","getSearchHistory","methods","referrer","$router","go","push","path","_this","self","CancelToken","axios","get","$route","params","cityId","cancelToken","c","then","response","status","statusText","$store","commit","localforage_default","a","setItem","console","log","catch","err","$toast","message","position","duration","error","isCancel","_this2","$indicator","open","text","spinnerType","city_id","id","keyword","close","_this3","getItem","_this4","flag","forEach","element","query","_this5","removeItem","destroyed","cancel","city_cityvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__","global","require","f","module","exports","e","t","n","r","s","o","u","i","Error","code","l","call","1","_dereq_","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","createTextNode","observe","characterData","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","window","2","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","obj","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","out","reason","all","iterable","prototype","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","race","constructor","3","4","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","IDBKeyRange","createBlob","parts","properties","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","_getConnection","upgradeNeeded","createDbContext","db","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","store","req","iterate","openCursor","iterationNumber","cursor","blobSupport","clear","count","advanced","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","_forage","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","$iterators","__webpack_require__","getKeys","redefine","hide","Iterators","wks","ITERATOR","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","NAME","explicit","Collection","proto","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_city_vue_vue_type_style_index_0_lang_stylus___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_city_vue_vue_type_style_index_0_lang_stylus___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/group-city-legacy.97182ef7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-box\"},[_c('mt-header',{attrs:{\"fixed\":\"\",\"title\":_vm.cityInfo.name}},[_c('div',{attrs:{\"slot\":\"left\"},on:{\"click\":_vm.back},slot:\"left\"},[_c('mt-button',{attrs:{\"icon\":\"back\"}},[_vm._v(\"返回\")])],1),_c('router-link',{attrs:{\"slot\":\"right\",\"to\":\"/all-city\"},slot:\"right\"},[_c('mt-button',[_vm._v(\"切换城市\")])],1)],1),_c('form',{staticClass:\"search-box\",attrs:{\"method\":\"post\"},on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"cell-box bg-fff padding-0\"},[_c('div',{staticClass:\"cell-item-left\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.address),expression:\"address\"}],staticClass:\"form-input\",attrs:{\"type\":\"search\",\"placeholder\":\"输入学校、商务楼、地址\"},domProps:{\"value\":(_vm.address)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.getAddressAround($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.address=$event.target.value}}})]),_c('div',{staticClass:\"cell-item-right\"},[_c('button',{staticClass:\"inline-btn\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.getAddressAround}},[_vm._v(\"搜索\")])])])]),_c('div',{staticClass:\"list-title-box\"},[(_vm.searchHistory.length > 0)?_c('div',{staticClass:\"list-title-item\",class:{ on: _vm.listIndex === 0 },on:{\"click\":function($event){return _vm.showSearchList(0)}}},[_vm._v(\"搜索历史\")]):_vm._e(),(_vm.addressAround.length > 0)?_c('div',{staticClass:\"list-title-item\",class:{ on: _vm.listIndex === 1 },on:{\"click\":function($event){return _vm.showSearchList(1)}}},[_vm._v(\"搜索结果\")]):_vm._e()]),(_vm.renderList.length > 0)?_c('div',{staticClass:\"address-list\"},_vm._l((_vm.renderList),function(item,index){return _c('div',{key:index,staticClass:\"list-item\",on:{\"click\":function($event){return _vm.nextpage(index, item.geohash)}}},[_c('div',{staticClass:\"item-name ellipsis\"},[_vm._v(_vm._s(item.name))]),_c('div',{staticClass:\"item-address ellipsis\"},[_vm._v(_vm._s(item.address))])])}),0):_vm._e(),(_vm.searchHistory.length > 0 && _vm.listIndex === 0)?_c('div',{staticClass:\"clear-search-box\"},[_c('button',{staticClass:\"form-btn\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.clearSearchHistory}},[_vm._v(\"清空搜索历史\")])]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"page-box\">\r\n        <mt-header fixed :title=\"cityInfo.name\">\r\n            <div slot=\"left\" @click=\"back\">\r\n                <mt-button icon=\"back\">返回</mt-button>\r\n            </div>\r\n            <router-link to=\"/all-city\" slot=\"right\">\r\n                <mt-button>切换城市</mt-button>\r\n            </router-link>\r\n        </mt-header>\r\n        <form class=\"search-box\" method=\"post\" v-on:submit.prevent>\r\n            <div class=\"cell-box bg-fff padding-0\">\r\n                <div class=\"cell-item-left\">\r\n                    <input class=\"form-input\" type=\"search\"\r\n                        v-model=\"address\" \r\n                        @keyup.enter=\"getAddressAround\"\r\n                        placeholder=\"输入学校、商务楼、地址\">\r\n                </div>\r\n                <div class=\"cell-item-right\">\r\n                    <button class=\"inline-btn\" type=\"button\"\r\n                        @click=\"getAddressAround\">搜索</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"list-title-box\">\r\n            <div class=\"list-title-item\"\r\n                v-if=\"searchHistory.length > 0\"\r\n                :class=\"{ on: listIndex === 0 }\"\r\n                @click=\"showSearchList(0)\">搜索历史</div>\r\n            <div class=\"list-title-item\"\r\n                v-if=\"addressAround.length > 0\"\r\n                :class=\"{ on: listIndex === 1 }\"\r\n                @click=\"showSearchList(1)\">搜索结果</div>\r\n        </div>\r\n        <div class=\"address-list\" \r\n            v-if=\"renderList.length > 0\">\r\n            <div class=\"list-item\"\r\n                v-for=\"(item, index) in renderList\" :key=\"index\"\r\n                @click='nextpage(index, item.geohash)'>\r\n                <div class=\"item-name ellipsis\">{{ item.name }}</div>\r\n                <div class=\"item-address ellipsis\">{{ item.address }}</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"clear-search-box\"\r\n            v-if=\"searchHistory.length > 0 && listIndex === 0\">\r\n            <button class=\"form-btn\" type=\"button\"\r\n                @click=\"clearSearchHistory\">清空搜索历史</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport localforage from 'localforage';\r\n\r\nexport default {\r\n    data(){\r\n        return {\r\n            renderList: [],\r\n            cityInfo: {},\r\n            address: '',\r\n            addressAround: [],\r\n            searchHistory: [],\r\n            listIndex: 0, // 0显示搜索历史，1显示搜索结果\r\n            axiosCancel: []\r\n        }\r\n    },\r\n    mounted(){\r\n        document.querySelector('title').innerText = '搜索地址';\r\n        this.getCityInfo();\r\n        this.getSearchHistory();\r\n    },\r\n    methods: {\r\n        back(){\r\n            if(document.referrer){\r\n                this.$router.go(-1);\r\n            }else{\r\n                 this.$router.push({ path: '/' });\r\n            }\r\n        },\r\n        getCityInfo(){\r\n            let self = this,\r\n                CancelToken = axios.CancelToken;\r\n            axios.get('https://elm.cangdu.org/v1/cities/' + self.$route.params.cityId, {\r\n                cancelToken: new CancelToken(function executor(c) {\r\n                    self.axiosCancel.push(c);\r\n                }),\r\n            })\r\n            .then(response => {\r\n                if(response.status === 200 && response.statusText === 'OK'){\r\n                    this.cityInfo = response.data;\r\n                    this.$store.commit('setCityInfo', this.cityInfo);\r\n                    localforage.setItem('loVue-elm-cityInfo', this.cityInfo).then(function (value) {\r\n                        console.log('本地城市信息保存成功');\r\n                    }).catch(function(err) {\r\n                        console.log('本地城市信息保存失败');\r\n                    });\r\n                }else{\r\n                    this.$toast({\r\n                        message: '城市获取失败，请刷新页面',\r\n                        position: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if(axios.isCancel(error)){\r\n                    console.log('Rquest canceled', error.message);\r\n                }\r\n            });\r\n        },\r\n        getAddressAround(){\r\n            if(!this.address){\r\n                this.$toast({\r\n                    message: '请输入地址',\r\n                    position: 'bottom',\r\n                    duration: 2000\r\n                });\r\n                return false;\r\n            }\r\n            let self = this,\r\n                CancelToken = axios.CancelToken;\r\n            this.$indicator.open({\r\n                text: '搜索中...',\r\n                spinnerType: 'fading-circle'\r\n            });\r\n            axios.get('https://elm.cangdu.org/v1/pois', {\r\n                params: {\r\n                    city_id: self.cityInfo.id,\r\n                    keyword: self.address\r\n                },\r\n                cancelToken: new CancelToken(function executor(c) {\r\n                    self.axiosCancel.push(c);\r\n                }),\r\n            })\r\n            .then(response => {\r\n                this.$indicator.close();\r\n                if(response.status === 200 && response.statusText === 'OK'){\r\n                    this.renderList = this.addressAround = response.data;\r\n                    this.listIndex = 1;\r\n                }else{\r\n                    this.$toast({\r\n                        message: '搜索地址失败，请重新搜索',\r\n                        position: 'bottom',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if(axios.isCancel(error)){\r\n                    console.log('Rquest canceled', error.message);\r\n                }\r\n            });\r\n        },\r\n        getSearchHistory(){\r\n            localforage.getItem('loVue-elm-searchHistory').then(value => {\r\n                this.renderList = this.searchHistory = value || [];\r\n                this.listIndex = 0;\r\n            });\r\n        },\r\n        nextpage(index, geohash){\r\n            let address = this.renderList[index],\r\n                flag = false; // 代表搜索历史中是否有\r\n            this.searchHistory.forEach(element => {\r\n                if(element.geohash === address.geohash){\r\n                    flag = true;\r\n                }\r\n            });\r\n            !flag && this.searchHistory.push(address);\r\n            localforage.setItem('loVue-elm-searchHistory', this.searchHistory).then(value => {\r\n                console.log('搜索信息保存成功');\r\n                this.$router.push({ path: '/msite', query: { geohash } });\r\n            });\r\n            \r\n        },\r\n        showSearchList(index){\r\n            if(index === 0){\r\n                this.renderList = this.searchHistory;\r\n                this.listIndex = 0;\r\n            }else if(index === 1){\r\n                this.renderList = this.addressAround;\r\n                this.listIndex = 1;\r\n            }\r\n        },\r\n        clearSearchHistory(){\r\n            localforage.removeItem('loVue-elm-searchHistory').then(() => {\r\n                this.renderList = this.searchHistory = [];\r\n                if(this.addressAround.length){\r\n                    this.renderList = this.addressAround;\r\n                    this.listIndex = 1;\r\n                }\r\n                this.$toast({\r\n                    message: '搜索历史已清空',\r\n                    position: 'bottom',\r\n                    duration: 2000\r\n                });\r\n            });\r\n        }\r\n    },\r\n    destroyed(){\r\n        this.axiosCancel.forEach((cancel) => {\r\n            cancel();\r\n        });\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n@import './../../style/custom.styl'\r\n\r\n.search-box\r\n    margin: 10px 0;\r\n    border-top: 1px solid $ddd;\r\n    border-bottom: 1px solid $ddd;\r\n    \r\n.address-list\r\n    margin: 10px 0;\r\n    border-bottom: 1px solid $ddd;\r\n\r\n.list-item\r\n    border-top: 1px solid $ddd;\r\n    padding: 10px 15px;\r\n    text-align: left;\r\n    background: #fff;\r\n\r\n.item-name\r\n    font-size: 16px;\r\n    color: $blank;\r\n    line-height: 24px;\r\n\r\n.item-address\r\n    margin-top: 3px;\r\n    font-size: 14px;\r\n    color: $999;\r\n    line-height: 18px;\r\n\r\n.ellipsis\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n.list-title-box\r\n    margin: 10px 0;\r\n    display: flex;\r\n    background: #fff;\r\n\r\n.list-title-item\r\n    flex: auto;\r\n    text-align: center;\r\n    line-height: 46px;\r\n    border-top: 1px solid $ddd;\r\n    border-bottom: 1px solid $ddd;\r\n\r\n.list-title-box .list-title-item:nth-child(1)\r\n    border-right: 1px solid $ddd;\r\n\r\n.list-title-box .list-title-item.on\r\n    color: $blue;\r\n\r\n.clear-search-box\r\n    margin: 10px 0;\r\n    padding: 0 10px;\r\n</style>\r\n\r\n\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./city.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./city.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./city.vue?vue&type=template&id=86e402aa&\"\nimport script from \"./city.vue?vue&type=script&lang=js&\"\nexport * from \"./city.vue?vue&type=script&lang=js&\"\nimport style0 from \"./city.vue?vue&type=style&index=0&lang=stylus&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./city.vue?vue&type=style&index=0&lang=stylus&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./city.vue?vue&type=style&index=0&lang=stylus&\""],"sourceRoot":""}